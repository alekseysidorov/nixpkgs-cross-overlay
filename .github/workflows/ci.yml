name: "Test"
on:
  pull_request:

jobs:
  # lints:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: cachix/install-nix-action@v22
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #     - uses: cachix/cachix-action@v12
  #       with:
  #         name: nixpkgs-cross-overlay
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

  #     - run: nix develop --command dprint check --verbose

  build-cache:
    strategy:
      matrix:
        os: [macos-latest-xlarge]
        # os: [ubuntu-latest, macos-latest]
        crossSystem:
          - 'null'
          - '{ config = "x86_64-unknown-linux-musl"; useLLVM = false; isStatic = false;  }'
          - '{ config = "x86_64-unknown-linux-musl"; useLLVM = true; isStatic = false;  }'
          - '{ config = "x86_64-unknown-linux-musl"; useLLVM = true; isStatic = true;  }'
          # Broken targets
          # - '{ config = "x86_64-unknown-linux-musl"; useLLVM = false; isStatic = true;  }'
          # - '{ config = "x86_64-unknown-linux-gnu"; useLLVM = false; isStatic = false;  }'
          # - '{ config = "aarch64-unknown-linux-musl"; useLLVM = true; isStatic = false; }'
          # - '{ config = "aarch64-unknown-linux-musl"; useLLVM = false; isStatic = false; }'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: nixpkgs-cross-overlay
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: "Build Packages"
        run: |
          nix-build shell.nix \
            --no-out-link \
            --arg crossSystem '${{ matrix.crossSystem }}'
      - name: "Test default shell"
        run: |
          nix-shell --pure \
            --arg crossSystem '${{ matrix.crossSystem }}' \
            --run ./tests/crates/build_all.sh
      - name: "Test example shell"
        run: |
          nix-shell ./examples/shell-rust-cross.nix \
            --arg crossSystem '${{ matrix.crossSystem }}' \
            --argstr branch ${{ steps.branch-name.outputs.current_branch }} \
            --run ./tests/crates/build_all.sh
